import Foundationclass FavoritesManager: ObservableObject {    static let shared = FavoritesManager()    private let favoritesKey = "favoritePokemons"        @Published var favoritePokemons: [Pokemon] = []        private init() {        loadFavorites()    }        func toggleFavorite(_ pokemon: Pokemon) {        if isFavorite(pokemon) {            favoritePokemons.removeAll { $0.id == pokemon.id }        } else {            favoritePokemons.append(pokemon)        }        saveFavorites()    }        func isFavorite(_ pokemon: Pokemon) -> Bool {        favoritePokemons.contains { $0.id == pokemon.id }    }        private func saveFavorites() {        if let encoded = try? JSONEncoder().encode(favoritePokemons) {            UserDefaults.standard.set(encoded, forKey: favoritesKey)        }    }        private func loadFavorites() {        if let data = UserDefaults.standard.data(forKey: favoritesKey),           let decoded = try? JSONDecoder().decode([Pokemon].self, from: data) {            favoritePokemons = decoded        }    }}