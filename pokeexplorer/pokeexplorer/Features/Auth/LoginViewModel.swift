import SwiftUIimport Combineclass LoginViewModel: ObservableObject {    // Propriedades observáveis    @Published var email: String = ""    @Published var password: String = ""    @Published var showError: Bool = false    @Published var errorMessage: String = ""        // Referência ao estado global do app (injetada)    private var appState: AppState        init(appState: AppState) {        self.appState = appState    }        func login() {        // Validação de campos vazios        guard !email.isEmpty && !password.isEmpty else {            showError = true            errorMessage = "Preencha todos os campos"            return        }                // Validação de formato de email        guard isValidEmail(email) else {            showError = true            errorMessage = "Email inválido"            return        }                // Tentativa de login        if appState.login(email: email, password: password) {            showError = false        } else {            showError = true            errorMessage = "Credenciais inválidas"        }    }        private func isValidEmail(_ email: String) -> Bool {        let emailRegex = "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"        let emailPredicate = NSPredicate(format: "SELF MATCHES %@", emailRegex)        return emailPredicate.evaluate(with: email)    }}