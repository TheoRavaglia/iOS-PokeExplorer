import Foundationclass LoginViewModel: ObservableObject {    @Published var email = ""    @Published var senha = ""    @Published var isLoading = false    @Published var mostrarErro = false    @Published var mensagemErro = ""        // Adicione esta propriedade computada    var isFormValid: Bool {        !email.isEmpty && email.contains("@") && senha.count >= 6    }        func login(completion: @escaping (Bool, [String: Any]?) -> Void) {        guard isFormValid else {            mensagemErro = "Por favor, preencha todos os campos corretamente"            mostrarErro = true            completion(false, nil)            return        }                isLoading = true        mostrarErro = false                DispatchQueue.main.asyncAfter(deadline: .now() + 1) {            self.isLoading = false            // Simulação de login bem-sucedido            let userData: [String: Any] = [                "email": self.email,                "name": "Usuário \(Int.random(in: 1...100))" // Nome aleatório para exemplo            ]            completion(true, userData)        }    }}