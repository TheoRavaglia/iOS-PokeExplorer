import SwiftUIimport SwiftDatastruct ProfileView: View {    @EnvironmentObject var authManager: AuthManager    @Environment(\.modelContext) private var modelContext    @Query private var favorites: [FavoritePokemon]        private var userFavorites: [FavoritePokemon] {        guard let userEmail = authManager.currentUser?.email else { return [] }        return favorites.filter { $0.userId == userEmail }            .sorted { $0.dateAdded > $1.dateAdded }    }        var body: some View {        List {            Section("Informações") {                if let user = authManager.currentUser {                    Text("Nome: \(user.name)")                    Text("Email: \(user.email)")                }            }                        Section("Pokémons Favoritos") {                ForEach(userFavorites) { favorite in                    Text(favorite.pokemonName.capitalized)                }                .onDelete(perform: deleteFavorite)            }        }        .navigationTitle("Perfil")    }        private func deleteFavorite(at offsets: IndexSet) {        for index in offsets {            let favorite = userFavorites[index]            modelContext.delete(favorite)        }    }}